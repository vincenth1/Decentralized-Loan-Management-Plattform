{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x524C5F657533e3E8Fc0Ee137eB605a1d4FFE4D7D",
      "txHash": "0x131e997ea889bc61e4823fa3345fc32897dd7b56a48f37503dd2cdcf8e6b5260",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f5e755bb1dd55ac93c179eb3e45534bb1eaa6ce9ea6ecd411ff65681c98a357a": {
      "address": "0xefa4FE35c78e44D8E8d71Fe12D97E4f258b4243d",
      "txHash": "0x865d417bc8ee3cb22f2efa55fbf76fde3fa77ed53a1b25928fa646e5d4347877",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "LiquidityPoolV1",
            "src": "contracts/LiquidityPoolV1.sol:7"
          },
          {
            "label": "totalFunds",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "LiquidityPoolV1",
            "src": "contracts/LiquidityPoolV1.sol:8"
          },
          {
            "label": "locked",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "LiquidityPoolV1",
            "src": "contracts/LiquidityPoolV1.sol:9"
          },
          {
            "label": "userDebt",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityPoolV1",
            "src": "contracts/LiquidityPoolV1.sol:11"
          },
          {
            "label": "creditScore",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint8)",
            "contract": "LiquidityPoolV1",
            "src": "contracts/LiquidityPoolV1.sol:12"
          },
          {
            "label": "borrowTimestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LiquidityPoolV1",
            "src": "contracts/LiquidityPoolV1.sol:13"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)7_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
